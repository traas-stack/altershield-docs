"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[8684],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=l.createContext({}),p=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return l.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?l.createElement(g,s(s({ref:t},c),{},{components:n})):l.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return l.createElement.apply(null,s)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var l=n(7462),a=(n(7294),n(3905));const r={},s="Quick Start",o={unversionedId:"altershield-operator/quick-start",id:"altershield-operator/quick-start",title:"Quick Start",description:"This document explains how to quickly run the AlterShield Operator service.",source:"@site/docs/05-altershield-operator/03-quick-start.md",sourceDirName:"05-altershield-operator",slug:"/altershield-operator/quick-start",permalink:"/docs/altershield-operator/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/altershield-operator/getting-started"},next:{title:"Quick Deploy",permalink:"/docs/altershield-operator/quick-deploy"}},i={},p=[{value:"Getting Started",id:"getting-started",level:2},{value:"Running Local Sever",id:"running-local-sever",level:2},{value:"Install dependencies:",id:"install-dependencies",level:3},{value:"2. Register the CRD to the Kubernetes cluster:",id:"2-register-the-crd-to-the-kubernetes-cluster",level:3},{value:"3. Use the following command to start the local service:",id:"3-use-the-following-command-to-start-the-local-service",level:3},{value:"Start first test deployment",id:"start-first-test-deployment",level:2},{value:"1. Set the default namespace to be controlled",id:"1-set-the-default-namespace-to-be-controlled",level:3},{value:"2. Create a Deployment resource sleep",id:"2-create-a-deployment-resource-sleep",level:3},{value:"3. Check if the deployment is successful",id:"3-check-if-the-deployment-is-successful",level:3},{value:"Self-healing rollback",id:"self-healing-rollback",level:2},{value:"1. Intentionally set the wrong image and modify the label test.",id:"1-intentionally-set-the-wrong-image-and-modify-the-label-test",level:3},{value:"2. Check the pod status of the sleep deployment again",id:"2-check-the-pod-status-of-the-sleep-deployment-again",level:3},{value:"3. Observe the rollback status",id:"3-observe-the-rollback-status",level:3},{value:"4. Rollback of version",id:"4-rollback-of-version",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"This document explains how to quickly run the AlterShield Operator service."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Before running the AlterShield Operator service, you need to read the following documents:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./getting-started"},"Getting Started"))),(0,a.kt)("h2",{id:"running-local-sever"},"Running Local Sever"),(0,a.kt)("h3",{id:"install-dependencies"},"Install dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"go mod tidy\n")),(0,a.kt)("h3",{id:"2-register-the-crd-to-the-kubernetes-cluster"},"2. Register the CRD to the Kubernetes cluster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f config/crd/bases\n")),(0,a.kt)("h3",{id:"3-use-the-following-command-to-start-the-local-service"},"3. Use the following command to start the local service:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"you need to set the environment variable ENVIRONMENT=DEV")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"ENVIRONMENT=DEV make run\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When you see the following log, it means the service has started successfully:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{"level":"info","ts":"2023-05-10T14:44:33.604+0800","caller":"controller/controller.go:241","msg":"Starting workers","controller":"deployment","controllerGroup":"apps","controllerKind":"Deployment","worker count":5}\n{"level":"info","ts":"2023-05-10T14:44:33.604+0800","caller":"controller/controller.go:241","msg":"Starting workers","controller":"changepod","controllerGroup":"app.ops.cloud.alipay.com","controllerKind":"ChangePod","worker count":20}\n{"level":"info","ts":"2023-05-10T14:44:33.604+0800","caller":"controller/controller.go:241","msg":"Starting workers","controller":"pod","controllerGroup":"","controllerKind":"Pod","worker count":5}\n{"level":"info","ts":"2023-05-10T14:44:33.605+0800","caller":"controller/controller.go:241","msg":"Starting workers","controller":"changeworkload","controllerGroup":"app.ops.cloud.alipay.com","controllerKind":"ChangeWorkload","worker count":5}\n')),(0,a.kt)("h2",{id:"start-first-test-deployment"},"Start first test deployment"),(0,a.kt)("h3",{id:"1-set-the-default-namespace-to-be-controlled"},"1. Set the default namespace to be controlled"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl label namespace default admission-webhook-altershield=enabled\n")),(0,a.kt)("p",null,"When you see the following log, it means the setting is successful:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"namespace/default labeled\n")),(0,a.kt)("h3",{id:"2-create-a-deployment-resource-sleep"},"2. Create a Deployment resource sleep"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sleep\n  labels:\n    app: sleep\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: sleep\n  template:\n    metadata:\n      labels:\n        app: sleep\n        test: "123"\n    spec:\n      containers:\n      - name: sleep\n        image: busybox\n        command: ["/bin/sleep","infinity"]\n        imagePullPolicy: IfNotPresent\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f config/samples/sleep.yaml\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When you see the following log, it means the deployment is successful:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deployment.apps/sleep created\n")),(0,a.kt)("h3",{id:"3-check-if-the-deployment-is-successful"},"3. Check if the deployment is successful"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get pods\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When you see 5 sleep pods running, it means the deployment is successful:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME                     READY   STATUS    RESTARTS   AGE\nsleep-5c698f4449-5m5g4   1/1     Running   0          2m\nsleep-5c698f4449-ctfd5   1/1     Running   0          2m\nsleep-5c698f4449-jkv5r   1/1     Running   0          2m\nsleep-5c698f4449-rjgkn   1/1     Running   0          2m\nsleep-5c698f4449-7q9q2   1/1     Running   0          2m\n")),(0,a.kt)("h2",{id:"self-healing-rollback"},"Self-healing rollback"),(0,a.kt)("h3",{id:"1-intentionally-set-the-wrong-image-and-modify-the-label-test"},"1. Intentionally set the wrong image and modify the label test."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sleep\n  labels:\n    app: sleep\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: sleep\n  template:\n    metadata:\n      labels:\n        app: sleep\n        test: "456"\n    spec:\n      containers:\n        - name: sleep\n          image: busybo\n          command: ["/bin/sleep","infinity"]\n          imagePullPolicy: IfNotPresent\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Reapply the sleep.yaml:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f config/samples/sleep.yaml\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"When you see the following log, it means the deployment is successful:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"deployment.apps/sleep configured\n")),(0,a.kt)("h3",{id:"2-check-the-pod-status-of-the-sleep-deployment-again"},"2. Check the pod status of the sleep deployment again"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get pods\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"At this point, you will find that the pod status of the sleep deployment has 4 running and 3 ErrImagePull. This is because the deployment sets an incorrect image and uses rolling deployment, resulting in abnormal status of some pods:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME                     READY   STATUS             RESTARTS   AGE\nsleep-5c698f4449-5m5g4   1/1     Running            0          2m49s\nsleep-5c698f4449-ctfd5   1/1     Running            0          2m49s\nsleep-5c698f4449-jkv5r   1/1     Running            0          2m49s\nsleep-5c698f4449-rjgkn   1/1     Running            0          2m49s\nsleep-6c55bbc8d6-m6g64   0/1     ErrImagePull       0          76s\nsleep-6c55bbc8d6-nlzrf   0/1     ImagePullBackOff   0          76s\nsleep-6c55bbc8d6-x7wvc   0/1     ErrImagePull       0          76s\n")),(0,a.kt)("h3",{id:"3-observe-the-rollback-status"},"3. Observe the rollback status"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"After the abnormal pod status exceeds the threshold time (default 2 minutes), the AlterShield Operator will automatically rollback the deployment to the previous normal version (if it exists).")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get pods\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"After waiting for the threshold time, you will find that all the pod status of the sleep deployment are running:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"NAME                     READY   STATUS    RESTARTS   AGE\nsleep-5c698f4449-5m5g4   1/1     Running   0          3m49s\nsleep-5c698f4449-ctfd5   1/1     Running   0          3m49s\nsleep-5c698f4449-jkv5r   1/1     Running   0          3m49s\nsleep-5c698f4449-rjgkn   1/1     Running   0          3m49s\nsleep-5c698f4449-7q9q2   1/1     Running   0          1m49s\n")),(0,a.kt)("h3",{id:"4-rollback-of-version"},"4. Rollback of version"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl get deployment sleep -o yaml\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'The current template image of the deployment is busybox, and the test label is "123".')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: "3"\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"sleep"},"name":"sleep","namespace":"default"},"spec":{"replicas":5,"selector":{"matchLabels":{"app":"sleep"}},"template":{"metadata":{"labels":{"app":"sleep","test":"1233"}},"spec":{"containers":[{"command":["/bin/sleep","infinity"],"image":"busybo","imagePullPolicy":"IfNotPresent","name":"sleep"}]}}}}\n  creationTimestamp: "2023-05-10T07:30:40Z"\n  generation: 3\n  labels:\n    admission-webhook-altershield.antgroup.com/version: c6c45d23c098bdf181853a85b60b5d74\n    altershield.defense.antgroup.com/defense-status: processed\n    app: sleep\n  name: sleep\n  namespace: default\n  resourceVersion: "174364"\n  uid: 63e253a2-d18a-4100-b928-38e004263762\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 5\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: sleep\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        admission-webhook-altershield.antgroup.com/version: c6c45d23c098bdf181853a85b60b5d74\n        app: sleep\n        test: "123"\n    spec:\n      containers:\n      - command:\n        - /bin/sleep\n        - infinity\n        image: busybox\n        imagePullPolicy: IfNotPresent\n        name: sleep\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 5\n  conditions:\n  - lastTransitionTime: "2023-05-10T07:30:42Z"\n    lastUpdateTime: "2023-05-10T07:30:42Z"\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: "True"\n    type: Available\n  - lastTransitionTime: "2023-05-10T07:30:40Z"\n    lastUpdateTime: "2023-05-10T07:34:15Z"\n    message: ReplicaSet "sleep-5c698f4449" has successfully progressed.\n    reason: NewReplicaSetAvailable\n    status: "True"\n    type: Progressing\n  observedGeneration: 3\n  readyReplicas: 5\n  replicas: 5\n  updatedReplicas: 5\n')))}d.isMDXComponent=!0}}]);